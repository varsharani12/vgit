<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="46508" started-at="2022-01-23T23:12:39 IST" finished-at="2022-01-23T23:13:25 IST">
    <groups>
      <group name="regressionTest">
        <method signature="BaseClass.configBS()[pri:0, instance:practice.SampleTest@7113b13f]" name="configBS" class="com.crm.GenericLibrary.BaseClass"/>
      </group> <!-- regressionTest -->
      <group name="smokeTest">
        <method signature="BaseClass.configBS()[pri:0, instance:practice.SampleTest@7113b13f]" name="configBS" class="com.crm.GenericLibrary.BaseClass"/>
      </group> <!-- smokeTest -->
    </groups>
    <test name="Test" duration-ms="46508" started-at="2022-01-23T23:12:39 IST" finished-at="2022-01-23T23:13:25 IST">
      <class name="practice.SampleTest">
        <test-method status="PASS" signature="configBS()[pri:0, instance:practice.SampleTest@7113b13f]" name="configBS" is-config="true" duration-ms="5" started-at="2022-01-23T23:12:39 IST" finished-at="2022-01-23T23:12:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBS -->
        <test-method status="PASS" signature="configBC()[pri:0, instance:practice.SampleTest@7113b13f]" name="configBC" is-config="true" duration-ms="11707" started-at="2022-01-23T23:12:39 IST" finished-at="2022-01-23T23:12:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:practice.SampleTest@7113b13f]" name="configBM" is-config="true" duration-ms="9703" started-at="2022-01-23T23:12:51 IST" finished-at="2022-01-23T23:13:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="PASS" signature="configBS()[pri:0, instance:practice.SampleTest@7113b13f]" name="configBS" duration-ms="9" started-at="2022-01-23T23:13:00 IST" finished-at="2022-01-23T23:13:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBS -->
        <test-method status="PASS" signature="configAM()[pri:0, instance:practice.SampleTest@7113b13f]" name="configAM" is-config="true" duration-ms="9617" started-at="2022-01-23T23:13:00 IST" finished-at="2022-01-23T23:13:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method status="PASS" signature="configBM()[pri:0, instance:practice.SampleTest@7113b13f]" name="configBM" is-config="true" duration-ms="4883" started-at="2022-01-23T23:13:10 IST" finished-at="2022-01-23T23:13:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method status="FAIL" signature="contactTest()[pri:0, instance:practice.SampleTest@7113b13f]" name="contactTest" duration-ms="6982" started-at="2022-01-23T23:13:15 IST" finished-at="2022-01-23T23:13:22 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [B] but found [A]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [B] but found [A]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at practice.SampleTest.contactTest(SampleTest.java:17)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactTest -->
        <test-method status="PASS" signature="configAM()[pri:0, instance:practice.SampleTest@7113b13f]" name="configAM" is-config="true" duration-ms="2030" started-at="2022-01-23T23:13:22 IST" finished-at="2022-01-23T23:13:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method status="PASS" signature="configAC()[pri:0, instance:practice.SampleTest@7113b13f]" name="configAC" is-config="true" duration-ms="1014" started-at="2022-01-23T23:13:24 IST" finished-at="2022-01-23T23:13:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
        <test-method status="PASS" signature="configAS()[pri:0, instance:practice.SampleTest@7113b13f]" name="configAS" is-config="true" duration-ms="0" started-at="2022-01-23T23:13:25 IST" finished-at="2022-01-23T23:13:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAS -->
      </class> <!-- practice.SampleTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
